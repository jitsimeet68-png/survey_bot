version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB_NAME}"]
      interval: 5s
      timeout: 3s
      retries: 10

  backend:
    build: ./backend
    container_name: backend
    env_file: .env
    environment:
      FLASK_ENV: development
      FLASK_DEBUG: "1"
      FLASK_APP: app.py
      PYTHONUNBUFFERED: "1"
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy

  proxy_api:
    image: nginx:alpine
    container_name: proxy_api
    depends_on:
      - backend
    ports:
      - "8440:8443"
    volumes:
      - ./proxy/nginx-api.conf:/etc/nginx/conf.d/default.conf:ro
      - ./proxy/certs:/etc/nginx/certs:ro

  admin:
    image: nocodb/nocodb:latest
    container_name: noco
    env_file: .env
    environment:
      NC_DB: pg://db:5432?u=${POSTGRES_USER}&p=${POSTGRES_PASSWORD}&d=${POSTGRES_DB_NAME}
      NC_PUBLIC_URL: https://${HOST}.ru:8441/
      NC_AUTH_JWT_SECRET: ${NC_AUTH_JWT_SECRET}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - noco_data:/usr/app/data

  proxy_noco:
    image: nginx:alpine
    container_name: proxy_noco
    depends_on:
      - admin
    ports:
      - "8441:8443"
    volumes:
      - ./proxy/nginx-noco.conf:/etc/nginx/conf.d/default.conf:ro
      - ./proxy/certs:/etc/nginx/certs:ro

volumes:
  pgdata:
  noco_data:
